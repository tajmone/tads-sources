<html>
<head>
<title>Creating a TADS Game, Step-by-Step</title>
<link rel=stylesheet href="wbdoc.css">
</head>

<body>

<font size=-1>Help Topics &gt;
<a href="wbcont.htm">Table of Contents</a></font>
<br><br>

<center>
<br><br><br><img src='../htmltads.jpg'>
<br><h1>Creating a TADS Game</h1>
<br><br>
</center>

<br><br>
<h2>
Step 1: Start TADS Workbench
</h2>
<p>
Go to your Windows "Start" menu, and open the "TADS Toolkit" menu.
Click on "TADS Workbench."  TADS Workbench will launch, and will
display a dialog asking you whether you'd like to create a new game
or open an existing game.

<br><br>
<h2>
Step 2: Click on the "New" Button
</h2>
<p>
You want to create a new game, so click on the "New" button.  This
will open the TADS New Game Wizard, which will ask you for the names
you'd like to use for your new game's files.

<br><br>
<h2>
Step 3: Follow the Wizard Instructions
</h2>
<p>
The New Game Wizard will ask you for the name you'd like to use for
your "source file."  The source file is simply a text file where you
write your TADS programming language instructions that define the rooms
and objects in your game.

<p>Do <b>not</b> put your source file in the same folder as the TADS
program files; instead, put your source file in a folder that you use
for your own personal files.  In the future, you might want to
upgrade to a new version of TADS.  When you do, the easiest way to
upgrade is to delete the old TADS program files and install the new
versions.  If you store your game files in the TADS program folder,
you might accidentally delete your game files when you replace your
TADS program files.  To be sure this doesn't happen, please put your
source file in your own personal folder.

<p>
If you're new to TADS, you should select the "Introductory" source
file type for your new source file.  This simply puts extra examples
in your new source file, to help you get started more quickly.

<p>
After you've answered all of the Wizard's questions, click the "Finish"
button to create your game.  TADS Workbench will open your game so that
you can begin working on it.

<br><br>
<h2>
Step 4: Try a Test Run
</h2>
<p>
Once TADS Workbench has opened your file, you can try compiling it
and running it:

<p>
<ul>
<li>First, open the "Build" menu, and select "Compile for
Debugging."  This will compile your game so that you can run it using
the TADS Debugger, which is a built-in part of TADS Workbench.  The
compiler will display its results in the "Debug Log" window; once you
see the message indicating that the build is finished, you can run
your game.

<li>Next, open the "Debug" menu and select "Go".  (You can also simply
press the F5 function key.)

<li>Your game will start, and you can type commands into the game.
When you're done, type the QUIT command to end the game.  The game
will remain loaded in TADS Workbench even after you quit, so you
can run it again if you want to.

</ul>

<br><br>
<h2>
Step 5: Editing your Source File
</h2>
<p>

<p>
TADS Workbench features a built-in, full-featured text editor.
The window showing your game's main source file lets you make
changes to the code.  To customize your game, simply edit
the source file in this window.

<p>After you make changes, you must first save the file, then
recompile your game.  The changes you make won't take effect until you
compile, so if you make changes and press "Go" without recompiling
first, you'll still see the old version of the game.

<p>The built-in editor is a popular programmer's text editor called
Scintilla, which has all of the features that you'd expect for a
programming environment: multi-level undo, syntax coloring, automatic
indenting, brace highlighting, and much more.  Workbench also lets you
customize the keyboard layout, and provides a wide range of options to
tailor the editor to your preferences.  Use the Options dialog to
access the many configuration options.

<p>If you have a separate text editor program that you'd prefer to
use, Workbench has some features designed to help.  You can configure
Workbench to open a file in your external editor application - use the
"External Editor" page of the Options dialog to tell Workbench how to
open your editor program.  After you do this, you can use the "Open
File in External Editor" command (on the Tools menu) to send a file
from the built-in Workbench editor directly to your separate editor
application.  After you make your changes, you can switch back to
Workbench to compile and test the changes.

<br><br>
<h2>
Step 6: Learning More about TADS
</h2>
<p>
At this point, you're ready to start learning more about TADS.
The <a href='../authkit/welcome.htm'>Welcome</a> page has more information
on where you can find documentation, examples, and other resources
for learning TADS.

<p>
Thanks for giving TADS a try!

</font>

<br><br><br><br><br>
<hr>
<br>
<font size=-1>Help Topics &gt;
<a href="wbcont.htm">Table of Contents</a></font>
<br><br>
<font size=-1>
Copyright &copy;1999, 2007 by Michael J. Roberts.
</font>

</body>
</html>

