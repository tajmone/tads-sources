<html><head><meta name="generator" content="Help & Manual 2.7.0"><title>CollectiveGroup (mobile)</title><meta name="keywords" content="CollectiveGroup,isCollectiveAction,PreCondition"></meta></head>
<body bgcolor="#FFFFFF">
<table width="100%" border="0" cellspacing="0" cellpadding="3" bgcolor="#C0C0C0"><tr><td align="left">
<font face="Arial" size="3" color="#000000"><b>CollectiveGroup (mobile)
<br>
</b></font>

</td><td align="right"><font face="Arial" size="2"><a href="collectivegroup.htm">[Previous]</a> <a href="generalintroduction.htm">[Main]</a> <a href="script.htm">[Next]</a></font></td></tr></table><br>

<font face="Arial" size="2" color="#000000">The previous example may have seemed a little complicated, but at least the CollectiveGroup and its members all stay in the same place. What if we want a CollectiveGroup that represents a collections of portable objects that can move around during the course of the game?
<br>

<br>
A case in point might be the two halves of the torn yellow piece of paper. At some point the player might want to be able effectively to join the two halves together and read the two columns side by side, instead of one after the other. With a bit of thought and effort, we can bring this about with a CollectiveGroup, such that when both halves of the piece of paper are available the player can command X YELLOW SHEETS or READ YELLOW SHEETS and see the paper whole.
<br>

<br>
The first step is to define the collectiveGroup object we want to use on both halves of the piece of paper:
<br>

<br>
<font face="Courier New" size="2" color="#000000">++&nbsp;leftHalfPaper&nbsp;:&nbsp;Hidden,&nbsp;Readable&nbsp;'left&nbsp;half&nbsp;torn&nbsp;sheet&nbsp;yellow&nbsp;paper*sheets*papers'&nbsp;
<br>
&nbsp;&nbsp;'torn&nbsp;sheet&nbsp;of&nbsp;yellow&nbsp;paper'&nbsp;&nbsp;
<br>
&nbsp;&nbsp;"It&nbsp;looks&nbsp;like&nbsp;the&nbsp;left&nbsp;hand&nbsp;half&nbsp;of&nbsp;a&nbsp;sheet&nbsp;of&nbsp;paper&nbsp;that's&nbsp;been&nbsp;torn&nbsp;in&nbsp;two.&nbsp;It
<br>
&nbsp;&nbsp;&nbsp;contains&nbsp;a&nbsp;list&nbsp;of&nbsp;letters&nbsp;and&nbsp;numbers.&nbsp;"
<br>
&nbsp;&nbsp;readDesc&nbsp;=&nbsp;"A0\nA2\nC9\nJ8\nM3\nQ7\nT5\n"&nbsp;&nbsp;
<br>
&nbsp;&nbsp;mainExamine
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;if(!described)&nbsp;name&nbsp;+=&nbsp;'&nbsp;(left&nbsp;half)';
<br>
&nbsp;&nbsp;&nbsp;&nbsp;inherited;
<br>
&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;<b>collectiveGroups&nbsp;=&nbsp;[yellowPaperGroup]
<br>
</b>;
<br>

<br>
/*&nbsp;Recall&nbsp;this&nbsp;is&nbsp;in&nbsp;a&nbsp;different&nbsp;location&nbsp;*/
<br>

<br>
+&nbsp;smallPicture&nbsp;:&nbsp;RearSurface&nbsp;'small&nbsp;picture/photo/photograph'&nbsp;'small&nbsp;picture'
<br>
&nbsp;&nbsp;"It's&nbsp;a&nbsp;faded&nbsp;photograph&nbsp;of&nbsp;an&nbsp;eccentrically-dressed&nbsp;man&nbsp;with&nbsp;a
<br>
&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;scarf,&nbsp;in&nbsp;company&nbsp;with&nbsp;a&nbsp;smiling&nbsp;young&nbsp;woman&nbsp;with
<br>
&nbsp;&nbsp;&nbsp;&nbsp;long&nbsp;blonde&nbsp;hair.&nbsp;"
<br>
&nbsp;&nbsp;&nbsp;allowPutBehind&nbsp;=&nbsp;nil
<br>
;
<br>

<br>
++&nbsp;rightHalfPaper&nbsp;:&nbsp;Hidden,&nbsp;Readable&nbsp;'right&nbsp;half&nbsp;torn&nbsp;sheet&nbsp;yellow&nbsp;paper*sheets*papers'&nbsp;
<br>
&nbsp;&nbsp;'torn&nbsp;sheet&nbsp;of&nbsp;yellow&nbsp;paper'&nbsp;&nbsp;
<br>
&nbsp;&nbsp;"It&nbsp;looks&nbsp;like&nbsp;the&nbsp;right&nbsp;hand&nbsp;half&nbsp;of&nbsp;a&nbsp;sheet&nbsp;of&nbsp;paper&nbsp;that's&nbsp;been&nbsp;torn&nbsp;in&nbsp;two.&nbsp;It
<br>
&nbsp;&nbsp;&nbsp;contains&nbsp;a&nbsp;list&nbsp;of&nbsp;names.&nbsp;"
<br>
&nbsp;&nbsp;readDesc&nbsp;=&nbsp;"Ship&nbsp;Hold\nSpaceStation\nNew&nbsp;Mars\nJerusalem\n
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nivalis\nLondon\nOutside&nbsp;Caves\n"&nbsp;&nbsp;
<br>
&nbsp;&nbsp;mainExamine
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;if(!described)&nbsp;name&nbsp;+=&nbsp;'&nbsp;(right&nbsp;half)';
<br>
&nbsp;&nbsp;&nbsp;&nbsp;inherited;
<br>
&nbsp;&nbsp;}
<br>
&nbsp;<b>&nbsp;collectiveGroups&nbsp;=&nbsp;[yellowPaperGroup]
<br>
</b>;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
The next task is to define the yellowPaperGroup CollectiveGroup object (to which we give no location):
<br>

<br>
</font><font face="Courier New" size="2" color="#000000">yellowPaperGroup&nbsp;:&nbsp;CollectiveGroup&nbsp;'yellow&nbsp;paper&nbsp;*sheets'&nbsp;'sheets&nbsp;of&nbsp;yellow&nbsp;paper'
<br>
&nbsp;&nbsp;"When&nbsp;you&nbsp;hold&nbsp;the&nbsp;two&nbsp;sheets&nbsp;of&nbsp;paper&nbsp;together,&nbsp;you&nbsp;find&nbsp;that&nbsp;the&nbsp;combined&nbsp;sheet
<br>
&nbsp;&nbsp;&nbsp;reads:\nA0&nbsp;Ship&nbsp;Hold\nA2&nbsp;Space&nbsp;Station\nC9&nbsp;New&nbsp;Mars\n
<br>
&nbsp;&nbsp;&nbsp;J8&nbsp;Jerusalem\nM3&nbsp;Nivalis\nQ7&nbsp;London\nT5&nbsp;Outside&nbsp;Caves\n"
<br>
&nbsp;&nbsp;dobjFor(Examine)
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;verify()&nbsp;{}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;preCond&nbsp;=&nbsp;[leftSheetHeld,&nbsp;rightSheetHeld]&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;}&nbsp;
<br>
&nbsp;&nbsp;basicExamine
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;if(gActor.isLocationLit)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;desc;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;else
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;desc;
<br>
&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;dobjFor(Read)&nbsp;asDobjFor(Examine)
<br>
&nbsp;&nbsp;isCollectiveAction(action,&nbsp;whichObj)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;we&nbsp;handle&nbsp;'Examine'&nbsp;&amp;&nbsp;'Read'*/
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(action.ofKind(ExamineAction)&nbsp;||&nbsp;action.ofKind(ReadAction))
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;
<br>
&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;it's&nbsp;not&nbsp;one&nbsp;of&nbsp;ours&nbsp;*/
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;nil;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
;
<br>

<br>
</font><font face="Arial" size="2" color="#000000">What we have done here is, first of all, define the description we want displayed when the two halves of the piece of paper are read or examined together, and then provided a handling for the Examine command that displays this description. We also include ReadAction among the kinds of action yellowPaperGroup will handle by overriding its isCollectiveAction method appropriately, and redirecting READ to EXAMINE. The main complication is that we don't want the player to be able to EXAMINE or READ both halves of the sheet of paper together unless they are both available to him or her separately. We therefore make it a precondition of examining the sheets together that they are both held (although we will allow them to be picked up in an implicit action if they are available to be picked up). We finally need to define the custom preconditions; since they'll be so similar we'll define a custom class and then derive both the preconditions from it:
<br>

<br>
</font><font face="Courier New" size="2" color="#000000">class&nbsp;SheetHeldPreCondition&nbsp;:&nbsp;PreCondition
<br>
&nbsp;&nbsp;sheet&nbsp;=&nbsp;nil
<br>
&nbsp;&nbsp;checkPreCondition(obj,&nbsp;allowImplicit)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;check&nbsp;to&nbsp;see&nbsp;if&nbsp;the&nbsp;actor&nbsp;is&nbsp;holding&nbsp;the&nbsp;sheet&nbsp;-&nbsp;if&nbsp;so,&nbsp;we're&nbsp;done&nbsp;*/
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(sheet.isHeldBy(gActor))
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;nil;
<br>
&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;the&nbsp;actor&nbsp;isn't&nbsp;holding&nbsp;the&nbsp;sheet,&nbsp;try&nbsp;a&nbsp;"take&nbsp;sheet"&nbsp;command&nbsp;*/
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(allowImplicit&nbsp;&amp;&amp;&nbsp;tryImplicitAction(Take,&nbsp;sheet))
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;make&nbsp;sure&nbsp;that&nbsp;leaves&nbsp;the&nbsp;actor&nbsp;holding&nbsp;the&nbsp;sheet&nbsp;-&nbsp;if&nbsp;not,
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;exit&nbsp;silently,&nbsp;since&nbsp;the&nbsp;reason&nbsp;for&nbsp;failure&nbsp;will&nbsp;have
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;been&nbsp;reported&nbsp;by&nbsp;the&nbsp;"take&nbsp;sheet"&nbsp;action&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!sheet.isHeldBy(gActor))
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;indicate&nbsp;that&nbsp;we&nbsp;executed&nbsp;an&nbsp;implicit&nbsp;command&nbsp;*/
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;we&nbsp;can't&nbsp;take&nbsp;the&nbsp;sheet&nbsp;implicitly&nbsp;-&nbsp;report&nbsp;the&nbsp;problem&nbsp;and&nbsp;exit&nbsp;*/
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportFailure('You&nbsp;don\'t&nbsp;have&nbsp;both&nbsp;sheets.&nbsp;');
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
;
<br>

<br>
leftSheetHeld&nbsp;:&nbsp;SheetHeldPreCondition
<br>
&nbsp;&nbsp;&nbsp;sheet&nbsp;=&nbsp;leftHalfPaper
<br>
;
<br>

<br>
rightSheetHeld&nbsp;:&nbsp;SheetHeldPreCondition
<br>
&nbsp;&nbsp;&nbsp;sheet&nbsp;=&nbsp;rightHalfPaper
<br>
;
<br>
</font></font>

</body></html>
