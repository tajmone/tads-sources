<html><head><meta name="generator" content="Help & Manual 2.7.0"><title>Lever</title><meta name="keywords" content="Lever,isPulled,makePulled,getWeight,SecretDoor,roomParts,force open,debugging commands,debugging commands, force open"></meta></head>
<body bgcolor="#FFFFFF">
<table width="100%" border="0" cellspacing="0" cellpadding="3" bgcolor="#C0C0C0"><tr><td align="left">
<font face="Arial" size="3" color="#000000"><b>Lever : <a href="thing-thebasics.htm">Thing</a>
<br>
</b></font>

</td><td align="right"><font face="Arial" size="2"><a href="dynamiclocations.htm">[Previous]</a> <a href="generalintroduction.htm">[Main]</a> <a href="dial.htm">[Next]</a></font></td></tr></table><br>

<font face="Arial" size="2" color="#000000">A Lever is a Thing that has two states, pulled and pushed, represented by its <b>isPulled</b> property being either true or nil respectively. The Lever class adds specialized handling for the PUSH, PULL and MOVED commands. A PULL command is considered illogical for a Lever whose isPulled is true, and a PUSH command illogical if it is nil (once a lever has been pulled it's in its pulled position and can't be pulled again until it's been pushed back to its starting position). If a PULL or PUSH command passes the verification stage, the action method calls <b>makePulled</b>(true) or makePulled(nil) accordingly. By default this simply sets the isPulled property to the value of the parameter passed to the makePulled method, but it can be overridden to do far more interesting things, as we shall shortly see. A MOVE command is effectively translated into a PUSH or PULL command, depending on the current state of the Lever (PUSH if isPulled is true, PULL otherwise).
<br>

<br>
There may obviously be cases where you want something that is quite obviously and explicitly a lever, and the Lever class clearly simplifies the definition of such objects. In general, all you need do is override makePulled(pulled) to define the particular effects of pulling or pushing the lever and then call inherited(pulled) for the default handling. Since a lever is so obviously something that should be pushed or pulled, however, here we'll make at least some attempt to disguise it. We'll make it an apparently decorative feature on a stone altar in the temple (in case you're wondering "What temple?", we'll  be defining it shortly). When the lever (thinly disguised as a banana-shaped projection from the north side of the altar) is pulled, a secret panel behind the altar slides open; when it is pushed the panel slides shut again. The complication is that the banana-shaped lever won't budge at all unless the weight of objects placed on the altar comes to exactly fifty-four pounds (information the player can discover by deciphering all those tablets we keep scattering about the place). This is how we'll do it:
<br>

<br>
<font face="Courier New" size="2" color="#000000">stoneAltar&nbsp;:&nbsp;Fixture,&nbsp;Surface&nbsp;'stone&nbsp;altar'&nbsp;'stone&nbsp;altar'&nbsp;@temple
<br>
&nbsp;&nbsp;"The&nbsp;altar&nbsp;comprises&nbsp;a&nbsp;massive&nbsp;stone&nbsp;slab,&nbsp;carefully&nbsp;carved&nbsp;and&nbsp;dressed&nbsp;into&nbsp;a
<br>
&nbsp;&nbsp;&nbsp;smooth&nbsp;surface,&nbsp;apart&nbsp;from&nbsp;a&nbsp;curious&nbsp;banana-shaped&nbsp;projection&nbsp;at&nbsp;one&nbsp;end.&nbsp;"
<br>
&nbsp;&nbsp;weight&nbsp;=&nbsp;0
<br>
;
<br>

<br>
+&nbsp;Lever,&nbsp;Component&nbsp;'banana-shaped&nbsp;banana&nbsp;shaped&nbsp;projection'&nbsp;'banana-shaped&nbsp;projection'
<br>
&nbsp;&nbsp;&nbsp;"Protruding&nbsp;from&nbsp;the&nbsp;north&nbsp;side&nbsp;of&nbsp;the&nbsp;altar,&nbsp;the&nbsp;banana-shaped&nbsp;projection&nbsp;is
<br>
&nbsp;&nbsp;&nbsp;&nbsp;its&nbsp;only&nbsp;decorative&nbsp;feature.&nbsp;"
<br>
&nbsp;&nbsp;&nbsp;makePulled(pulled)
<br>
&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(stoneAltar.getWeight&nbsp;!=&nbsp;54)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reportFailure('It&nbsp;won\'t&nbsp;budge.&nbsp;');&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if(pulled)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"With&nbsp;a&nbsp;loud&nbsp;grating&nbsp;sound,&nbsp;the&nbsp;wall&nbsp;behind&nbsp;the&nbsp;altar&nbsp;grinds&nbsp;open.&nbsp;";&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"When&nbsp;you&nbsp;push&nbsp;the&nbsp;lever,&nbsp;the&nbsp;wall&nbsp;behind&nbsp;the&nbsp;altar&nbsp;grinds&nbsp;shut.&nbsp;";
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inherited(pulled);&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;templeWestWall.makeOpen(pulled);
<br>
&nbsp;&nbsp;&nbsp;}&nbsp;
<br>
&nbsp;&nbsp;&nbsp;weight&nbsp;=&nbsp;0&nbsp;&nbsp;
<br>
;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
Perhaps the only real subtlety here is making the weight of both the altar and the projection zero. The reason for doing this is that both weights (by default each 1) are included in the calculation of stoneAltar.getWeight, which we are using to check the weight of items placed on the altar. We could have compensated for this by adding 2 to the weight we were checking for, but doing it the way we've done it is almost certainly less confusing and less error-prone.
<br>

<br>
With a bit more tweaking in the makePulled method, the Lever class can be used for something even less obviously less like a lever. In a nearby location we'll put a gold statue standing on a gold plinth. If the statue is pushed it topples over revealing a cavity in the plinth, which cavity contains yet another tablet: appropriately, the golden one. Here's how we can implement the statue as a Lever:
<br>

<br>
</font><font face="Courier New" size="2" color="#000000">goldenGrotto&nbsp;:&nbsp;DarkRoom&nbsp;'Golden&nbsp;Grotto'&nbsp;'the&nbsp;golden&nbsp;grotto'
<br>
&nbsp;&nbsp;"The&nbsp;walls&nbsp;of&nbsp;this&nbsp;grotto&nbsp;glitter&nbsp;with&nbsp;gold&nbsp;dust&nbsp;embedded&nbsp;among&nbsp;the&nbsp;rock,&nbsp;but
<br>
&nbsp;&nbsp;&nbsp;if&nbsp;there&nbsp;was&nbsp;any&nbsp;gold&nbsp;of&nbsp;any&nbsp;consequence&nbsp;here,&nbsp;it&nbsp;has&nbsp;long&nbsp;since&nbsp;been&nbsp;removed,&nbsp;
<br>
&nbsp;&nbsp;&nbsp;apart&nbsp;from&nbsp;"
<br>
&nbsp;&nbsp;southeast&nbsp;=&nbsp;westShore
<br>
&nbsp;&nbsp;out&nbsp;asExit(southeast)
<br>
;
<br>

<br>
+&nbsp;statue&nbsp;:&nbsp;Lever,&nbsp;Fixture&nbsp;'gold&nbsp;statue'&nbsp;'gold&nbsp;statue'
<br>
&nbsp;&nbsp;"The&nbsp;gold&nbsp;statue&nbsp;depicts&nbsp;a&nbsp;solemn,&nbsp;regal&nbsp;figure&nbsp;of&nbsp;noble&nbsp;bearing&nbsp;wearing&nbsp;a
<br>
&nbsp;&nbsp;&nbsp;golden&nbsp;crown.&nbsp;The&nbsp;figure's&nbsp;right&nbsp;hand&nbsp;looks&nbsp;as&nbsp;if&nbsp;it&nbsp;is&nbsp;clutching&nbsp;something
<br>
&nbsp;&nbsp;&nbsp;that&nbsp;is&nbsp;no&nbsp;longer&nbsp;there.&nbsp;&lt;&lt;isPulled&nbsp;?&nbsp;nil&nbsp;:&nbsp;'The&nbsp;statue&nbsp;has&nbsp;been&nbsp;toppled&nbsp;off
<br>
&nbsp;&nbsp;&nbsp;its&nbsp;base&nbsp;and&nbsp;is&nbsp;lying&nbsp;on&nbsp;the&nbsp;ground.'&gt;&gt;&nbsp;"
<br>
&nbsp;&nbsp;inRoomDesc&nbsp;=&nbsp;"a&nbsp;golden&nbsp;statue&nbsp;&lt;&lt;isPulled&nbsp;?&nbsp;'standing&nbsp;proudly&nbsp;on&nbsp;a&nbsp;golden&nbsp;plinth'
<br>
&nbsp;&nbsp;&nbsp;:&nbsp;'lying&nbsp;on&nbsp;the&nbsp;ground'&gt;&gt;.&nbsp;"
<br>
&nbsp;&nbsp;makePulled(pulled)
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;if(pulled)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"You&nbsp;aren\'t&nbsp;strong&nbsp;enough&nbsp;to&nbsp;pull&nbsp;the&nbsp;statue&nbsp;back&nbsp;upright.&nbsp;";
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;else
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"The&nbsp;statue&nbsp;topples&nbsp;over,&nbsp;revealing&nbsp;a&nbsp;cavity&nbsp;in&nbsp;the&nbsp;plinth&nbsp;beneath.&nbsp;";
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;plinth.initializeVocabWith('cavity');
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;inherited(pulled);
<br>
&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;isPulled&nbsp;=&nbsp;true
<br>
;
<br>

<br>
+&nbsp;plinth&nbsp;:&nbsp;Container,&nbsp;Fixture&nbsp;'plinth'&nbsp;'plinth'
<br>
&nbsp;&nbsp;"The&nbsp;plinth&nbsp;is&nbsp;a&nbsp;&lt;&lt;isOpen&nbsp;?&nbsp;'hollow'&nbsp;:&nbsp;'solid'&gt;&gt;&nbsp;block&nbsp;of&nbsp;gold&nbsp;inscribed&nbsp;with&nbsp;the
<br>
&nbsp;&nbsp;words&nbsp;&lt;q&gt;King&nbsp;Benedict&nbsp;the&nbsp;Banana-Bearer&lt;/q&gt;.&nbsp;"
<br>
&nbsp;&nbsp;isOpen&nbsp;=&nbsp;(!statue.isPulled)
<br>
&nbsp;&nbsp;
<br>
;
<br>

<br>
++&nbsp;goldTablet&nbsp;:&nbsp;Tablet&nbsp;'gold&nbsp;tablet*tablets'&nbsp;'gold&nbsp;tablet'
<br>
&nbsp;&nbsp;inscription&nbsp;=&nbsp;"T&nbsp;F&nbsp;Q&nbsp;Z&nbsp;P\nN&nbsp;W&nbsp;O&nbsp;B&nbsp;E\nA&nbsp;U&nbsp;O&nbsp;U&nbsp;A\nF&nbsp;L&nbsp;O&nbsp;U&nbsp;R\nS&nbsp;T&nbsp;O&nbsp;P&nbsp;S"
<br>
&nbsp;&nbsp;weight&nbsp;=&nbsp;32
<br>
&nbsp;&nbsp;feelDesc&nbsp;=&nbsp;"It&nbsp;feels&nbsp;mighty&nbsp;heavy!&nbsp;"
<br>
;
<br>

<br>
Decoration&nbsp;'cavity'&nbsp;'cavity';
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
In case you're wondering, the purpose of the seemingly pointless and actually locationless Decoration object at the end is to ensure that 'cavity' is a word the game recognizes even before the statue is pushed over, in case the player tries to refer to the cavity before the statue is TOPPLED; in such a case 'You see no cavity here' is a more appropriate response than 'The word "cavity" is not necessary in this story' (since the word "cavity" will be added to the dictionary words referring to the plinth once the statue is toppled).
<br>

<br>
We'll give <a href="lever(2).htm">yet another example of a lever</a> when we're ready for it. To tidy up this part of the game, we need to create the temple and the connections between various locations. To start with we'll create the routes to the grotto and the temple from the shore of the lake:
<br>

<br>
</font><font face="Courier New" size="2" color="#000000">westShore&nbsp;:&nbsp;Room&nbsp;'Sandy&nbsp;Beach'&nbsp;'the&nbsp;sandy&nbsp;beach'
<br>
&nbsp;&nbsp;&nbsp;"For&nbsp;an&nbsp;underground&nbsp;lake&nbsp;this&nbsp;section&nbsp;of&nbsp;shore&nbsp;forms&nbsp;a&nbsp;surprisingly&nbsp;large&nbsp;beach.&nbsp;The
<br>
&nbsp;&nbsp;&nbsp;lake&nbsp;laps&nbsp;the&nbsp;shore&nbsp;to&nbsp;the&nbsp;east,&nbsp;while&nbsp;a&nbsp;pair&nbsp;of&nbsp;paths&nbsp;lead&nbsp;up&nbsp;from&nbsp;the&nbsp;beach&nbsp;to&nbsp;the
<br>
&nbsp;&nbsp;&nbsp;cave&nbsp;complex&nbsp;beyond,&nbsp;one&nbsp;to&nbsp;the&nbsp;northwest&nbsp;and&nbsp;the&nbsp;other&nbsp;to&nbsp;the&nbsp;southwest.&nbsp;"
<br>
&nbsp;&nbsp;&nbsp;<b>southwest&nbsp;=&nbsp;graveyard
<br>
</b>&nbsp;&nbsp;&nbsp;<b>northwest&nbsp;=&nbsp;goldenGrotto
<br>
</b>;
<br>

<br>
graveyard&nbsp;:&nbsp;Room&nbsp;'Graveyard'&nbsp;'the&nbsp;graveyard'
<br>
&nbsp;&nbsp;"There&nbsp;is&nbsp;something&nbsp;decidedly&nbsp;eerie&nbsp;about&nbsp;this&nbsp;underground&nbsp;graveyard&nbsp;with&nbsp;its
<br>
&nbsp;&nbsp;&nbsp;musty&nbsp;old&nbsp;tombstones.&nbsp;This&nbsp;is&nbsp;truly&nbsp;a&nbsp;place&nbsp;of&nbsp;death;&nbsp;nothing&nbsp;
<br>
&nbsp;&nbsp;&nbsp;lives&nbsp;here,&nbsp;for&nbsp;this&nbsp;place&nbsp;never&nbsp;sees&nbsp;the&nbsp;sun;&nbsp;a&nbsp;dusty&nbsp;path&nbsp;leads&nbsp;off&nbsp;to&nbsp;the
<br>
&nbsp;&nbsp;&nbsp;&nbsp;northeast&nbsp;and&nbsp;a&nbsp;strange,&nbsp;stone&nbsp;temple&nbsp;is&nbsp;situated&nbsp;just&nbsp;to&nbsp;the&nbsp;west.&nbsp;"
<br>
&nbsp;&nbsp;&nbsp;northeast&nbsp;=&nbsp;westShore
<br>
&nbsp;&nbsp;&nbsp;west&nbsp;=&nbsp;temple
<br>
;
<br>

<br>
+&nbsp;Fixture&nbsp;'musty&nbsp;old&nbsp;tomb/tombs/tombstones/tombstone'&nbsp;'tombstones'
<br>
&nbsp;&nbsp;"One&nbsp;in&nbsp;particular&nbsp;catches&nbsp;your&nbsp;eye,&nbsp;perhaps&nbsp;because&nbsp;of&nbsp;its&nbsp;curious&nbsp;inscription:
<br>
&nbsp;&nbsp;&nbsp;\b&lt;FONT&nbsp;FACE='TADS-Typewriter'&gt;O&nbsp;1&nbsp;+&nbsp;+&nbsp;+\n8&nbsp;R&nbsp;2&nbsp;+&nbsp;+\n+&nbsp;7&nbsp;D&nbsp;3&nbsp;+\n
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+&nbsp;+&nbsp;6&nbsp;E&nbsp;4\n+&nbsp;+&nbsp;+&nbsp;5&nbsp;R&lt;/FONT&gt;\b"
<br>
&nbsp;&nbsp;isPlural&nbsp;=&nbsp;true
<br>
;
<br>

<br>
+&nbsp;Enterable&nbsp;-&gt;&nbsp;temple&nbsp;'strange&nbsp;stone&nbsp;temple/door/lintel'&nbsp;'temple'
<br>
&nbsp;&nbsp;"It's&nbsp;a&nbsp;curious&nbsp;structure,&nbsp;seemingly&nbsp;carved&nbsp;out&nbsp;of&nbsp;the&nbsp;solid&nbsp;rock&nbsp;in&nbsp;an&nbsp;approximation
<br>
&nbsp;&nbsp;&nbsp;to&nbsp;a&nbsp;gothic&nbsp;design.&nbsp;An&nbsp;inscription&nbsp;on&nbsp;the&nbsp;door&nbsp;lintel&nbsp;suggests&nbsp;that&nbsp;the&nbsp;temple&nbsp;is
<br>
&nbsp;&nbsp;&nbsp;dedicated&nbsp;&lt;q&gt;to&nbsp;the&nbsp;unknown&nbsp;god&lt;/q&gt;.&nbsp;"
<br>
;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
There's nothing new in any of this. Of some interest, however, is the description of the tombstones, since this provides the key to deciphering the tablets (how this works should be rather more obvious when you see the description displayed). Next we need to define the interior of the temple:
<br>

<br>
</font><font face="Courier New" size="2" color="#000000"><a name="temple">temple&nbsp;:&nbsp;DarkRoom&nbsp;'Inside&nbsp;the&nbsp;Temple'&nbsp;'the&nbsp;temple'
<br>
&nbsp;&nbsp;"This&nbsp;gloomy&nbsp;temple&nbsp;looks&nbsp;like&nbsp;something&nbsp;out&nbsp;a&nbsp;gothic&nbsp;horror&nbsp;movie.&nbsp;The&nbsp;long,&nbsp;bare
<br>
&nbsp;&nbsp;&nbsp;nave&nbsp;is&nbsp;populated&nbsp;only&nbsp;by&nbsp;a&nbsp;series&nbsp;of&nbsp;grim&nbsp;stone&nbsp;columns&nbsp;festooned&nbsp;with&nbsp;cobwebs.&nbsp;
<br>
&nbsp;&nbsp;&nbsp;A&nbsp;large&nbsp;stone&nbsp;altar&nbsp;stands&nbsp;at&nbsp;the&nbsp;west&nbsp;end,&nbsp;"
<br>
&nbsp;&nbsp;out&nbsp;=&nbsp;graveyard
<br>
&nbsp;&nbsp;east&nbsp;asExit(out)
<br>
&nbsp;&nbsp;roomParts&nbsp;=&nbsp;static&nbsp;inherited&nbsp;-&nbsp;defaultWestWall
<br>
&nbsp;&nbsp;west&nbsp;=&nbsp;templeWestWall
<br>
;
<br>

<br>
+&nbsp;CustomFixture&nbsp;'grim&nbsp;(stone)&nbsp;column/columns'&nbsp;'columns'
<br>
&nbsp;&nbsp;"Four&nbsp;pairs&nbsp;of&nbsp;the&nbsp;stone&nbsp;column&nbsp;flank&nbsp;the&nbsp;central&nbsp;aisle,&nbsp;each&nbsp;column&nbsp;a&nbsp;
<br>
&nbsp;&nbsp;&nbsp;grotesque,&nbsp;twisted&nbsp;shape,&nbsp;mocking&nbsp;the&nbsp;overall&nbsp;classical&nbsp;arrangement.&nbsp;"
<br>
&nbsp;&nbsp;isPlural&nbsp;=&nbsp;true
<br>
&nbsp;&nbsp;cannotTakeMsg&nbsp;=&nbsp;'Moving&nbsp;these&nbsp;columns&nbsp;might&nbsp;be&nbsp;a&nbsp;seriously&nbsp;bad&nbsp;idea,
<br>
&nbsp;&nbsp;&nbsp;since&nbsp;they&nbsp;appear&nbsp;to&nbsp;be&nbsp;holding&nbsp;up&nbsp;the&nbsp;roof;&nbsp;fortunately&nbsp;there\'s
<br>
&nbsp;&nbsp;&nbsp;not&nbsp;the&nbsp;remotest&nbsp;prospect&nbsp;of&nbsp;your&nbsp;being&nbsp;able&nbsp;to&nbsp;shift&nbsp;any&nbsp;of&nbsp;them
<br>
&nbsp;&nbsp;&nbsp;by&nbsp;so&nbsp;much&nbsp;as&nbsp;a&nbsp;nanocubit.&nbsp;'
<br>
;
<br>

<br>
+&nbsp;Decoration&nbsp;'cobwebs/webs/web/cobweb'&nbsp;'cobwebs'
<br>
&nbsp;&nbsp;"Multiple&nbsp;cobwebs&nbsp;festoon&nbsp;the&nbsp;space&nbsp;around&nbsp;the&nbsp;tops&nbsp;of&nbsp;the&nbsp;columns&nbsp;and
<br>
&nbsp;&nbsp;&nbsp;the&nbsp;ceiling,&nbsp;but&nbsp;the&nbsp;spiders&nbsp;responsible&nbsp;have&nbsp;long&nbsp;since&nbsp;departed.&nbsp;"
<br>
&nbsp;&nbsp;isPlural&nbsp;=&nbsp;true
<br>
;
<br>

<br>
+&nbsp;templeWestWall&nbsp;:&nbsp;SecretDoor&nbsp'(w) west wall*walls' 'west wall'
<br>
&nbsp;&nbsp;desc()
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;if(isOpen)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Most&nbsp;of&nbsp;the&nbsp;wall&nbsp;behind&nbsp;the&nbsp;altar&nbsp;has&nbsp;moved&nbsp;aside,&nbsp;leaving&nbsp;an&nbsp;aperture&nbsp;into
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;chamber&nbsp;beyond.&nbsp;";
<br>
&nbsp;&nbsp;&nbsp;&nbsp;else
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"The&nbsp;wall&nbsp;behind&nbsp;the&nbsp;altar&nbsp;is&nbsp;carved&nbsp;with&nbsp;strange&nbsp;patterns.&nbsp;";
<br>
&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;destination&nbsp;=&nbsp;templeChamber
<br>
&nbsp;&nbsp;inRoomDesc&nbsp;=&nbsp;"behind&nbsp;which&nbsp;is&nbsp;a&nbsp;&lt;&lt;isOpen&nbsp;?&nbsp;'large&nbsp;open&nbsp;aperture&nbsp;in&nbsp;the
<br>
&nbsp;&nbsp;&nbsp;wall'&nbsp;:&nbsp;'stone&nbsp;wall&nbsp;carved&nbsp;with&nbsp;strange,&nbsp;abstract&nbsp;symbols'&gt;&gt;.&nbsp;"
<br>
;
<br>

<br>
++&nbsp;Component&nbsp;'strange&nbsp;abstract&nbsp;patterns/symbols/squares'&nbsp;'symbols'
<br>
&nbsp;&nbsp;"Some&nbsp;of&nbsp;them&nbsp;could&nbsp;almost&nbsp;be&nbsp;bananas,&nbsp;but&nbsp;most&nbsp;are&nbsp;spirals&nbsp;and&nbsp;squares.&nbsp;Several
<br>
&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;squares&nbsp;are&nbsp;subdivided&nbsp;into&nbsp;twenty-five&nbsp;smaller&nbsp;squares.&nbsp;"
<br>
&nbsp;&nbsp;isPlural&nbsp;=&nbsp;true
<br>
;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
The main thing to note here is how we handle the west wall of the temple. We remove the defaultWestWall from the temple's roomParts, but on this occasion we don't add our customized west wall back in. The main reason for this is because it makes use of our custom inRoomDesc property to add a description of itself to the room description, and for this to work it must be defined as in the temple's contents, not its roomParts.
<br>

<br>
Finally, we need to define the secret chamber that's revealed when the west wall is opened:
<br>

<br>
</font><font face="Courier New" size="2" color="#000000">templeChamber&nbsp;:&nbsp;DarkRoom&nbsp;'Small&nbsp;Square&nbsp;Chamber'&nbsp;'the&nbsp;small&nbsp;square&nbsp;chamber'
<br>
&nbsp;&nbsp;"The&nbsp;most&nbsp;noticeable&nbsp;feature&nbsp;of&nbsp;this&nbsp;otherwise&nbsp;featureless&nbsp;chamber&nbsp;is&nbsp;the
<br>
&nbsp;&nbsp;&nbsp;way&nbsp;out&nbsp;to&nbsp;the&nbsp;east.&nbsp;"
<br>
&nbsp;&nbsp;out&nbsp;=&nbsp;temple
<br>
&nbsp;&nbsp;east&nbsp;asExit(out)
<br>
;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
That completes what is necessary for you to be able to compile and test the game once more. To try out the altar puzzle, you'll need to put the gold, stone and brass tablets there plus either an item weighing 2 or two items each weighing 1 (e.g. the torch and the brass key). You are, of course, entirely welcome to use the scales in the galley to try to find some other combination of objects coming to 54 pounds weight in total!
<br>

<br>
Of course, you may find it a bit tedious to go through the process of having to collect the right objects to put on the altar if you need to get into the small chamber beyond during the process of game development and testing (as you shortly will), so perhaps the time has come to define another magical debugging command. We'll call this one FORCE OPEN or FOPEN for short; if you FOPEN anything that's openable, it'll open up straight away, bypassing any locks or other inconvenient impediments:
<br>

<br>
</font><font face="Courier New" size="2" color="#000000">DefineTAction(ForceOpen)
<br>
;
<br>

<br>
VerbRule(ForceOpen)
<br>
&nbsp;&nbsp;('force'&nbsp;singleDobj&nbsp;'open')&nbsp;|&nbsp;('force'&nbsp;'open'&nbsp;singleDobj)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;('fopen'&nbsp;singleDobj)
<br>
&nbsp;&nbsp;:ForceOpenAction
<br>
&nbsp;&nbsp;verbPhrase&nbsp;=&nbsp;'force/forcing&nbsp;(what)&nbsp;open'
<br>
;
<br>

<br>
modify&nbsp;Thing
<br>
&nbsp;&nbsp;verifyDobjForceOpen&nbsp;{&nbsp;illogical('{The&nbsp;dobj/he}&nbsp;{is}n\'t&nbsp;openable.&nbsp;');&nbsp;}&nbsp;
<br>
;
<br>

<br>
modify&nbsp;BasicOpenable
<br>
&nbsp;&nbsp;dobjFor(ForceOpen)
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;verify()&nbsp;{&nbsp;if(isOpen)&nbsp;illogicalNow('{The&nbsp;dobj/he}&nbsp;{is}&nbsp;already&nbsp;open.&nbsp;');&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;action()&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isLocked&nbsp;=&nbsp;nil;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isOpen&nbsp;=&nbsp;true;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"With&nbsp;a&nbsp;loud&nbsp;bang,&nbsp;{the&nbsp;dobj/he}&nbsp;flies&nbsp;open.&nbsp;";
<br>
&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;}
<br>
;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
Don't forget to put code like this between #ifdef __DEBUG and #endif, so it doesn't end up in the released version of your game.
<br>

<br>

<br>

<br>

<br>

<br>

<br>
</font></font>

</body></html>
