<html><head><meta name="generator" content="Help & Manual 2.7.0"><title>TellToAction</title><meta name="keywords" content="executeCommand,Tokenizer,tokenize"></meta></head>
<body bgcolor="#FFFFFF">
<table width="100%" border="0" cellspacing="0" cellpadding="3" bgcolor="#C0C0C0"><tr><td align="left">
<font face="Arial" size="3" color="#000000"><b>TellToAction
<br>
</b></font>

</td><td align="right"><font face="Arial" size="2"><a href="stringpreparser.htm">[Previous]</a> <a href="generalintroduction.htm">[Main]</a> <a href="consultable.htm">[Next]</a></font></td></tr></table><br>

<font face="Arial" size="2" color="#000000">We can define a custom TellTo action that will translate TELL SARAH TO JUMP into SARAH, JUMP or ASK SARAH TO GO NORTH into SARAH, NORTH rather more neatly than using a StringPreParser. All we need to do is to define a LiteralTAction that matches the grammar TELL X TO Y or ASK X TO Y. X will be taken as the direct object of the command, and Y as a string literal containing the command X is to execute. To make X execute the command Y all we need then do is to tokenize the string Y and then call Tokenizer.tokenize to convert it into a list of tokens we can feed into the executeCommand function.
<br>

<br>
The only real complication is that the player who uses this syntax is likely to type ASK SARAH TO KISS YOU and expect it to behave like SARAH, KISS ME; we therefore have to test whether 'you' exists among the command tokens and if so replace every occurrence of it with 'me'.
<br>

<br>
Here's the complete definition:
<br>

<br>
<font face="Courier New" size="2" color="#000000">DefineLiteralTAction(TellTo,&nbsp;IndirectObject);&nbsp;
<br>
&nbsp;
<br>
VerbRule(TellTo)
<br>
&nbsp;('tell'&nbsp;|&nbsp;'ask'&nbsp;|&nbsp;'order')&nbsp;singleDobj&nbsp;'to'&nbsp;singleLiteral
<br>
&nbsp;:&nbsp;TellToAction
<br>
&nbsp;verbPhrase&nbsp;=&nbsp;'tell/telling&nbsp;(whom)&nbsp;(to&nbsp;what)'
<br>
;
<br>

<br>
modify&nbsp;Thing
<br>
&nbsp;&nbsp;dobjFor(TellTo)
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;verify()&nbsp;{&nbsp;illogical('{The&nbsp;dobj/he}&nbsp;do{es}n\'t&nbsp;accept&nbsp;orders.&nbsp;');&nbsp;}
<br>
&nbsp;&nbsp;}
<br>
;
<br>

<br>
modify&nbsp;Actor
<br>
&nbsp;&nbsp;dobjFor(TellTo)
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;verify()&nbsp;{}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;preCond&nbsp;=&nbsp;[canTalkToObj]
<br>
&nbsp;&nbsp;&nbsp;&nbsp;action()
<br>
&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;local&nbsp;tokList&nbsp;=&nbsp;Tokenizer.tokenize(gLiteral);
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;you&nbsp;probably&nbsp;want&nbsp;to&nbsp;translate&nbsp;'you'&nbsp;into&nbsp;'me'
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;likewise&nbsp;'himself'&nbsp;or&nbsp;'herself'&nbsp;into&nbsp;'yourself'
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;in&nbsp;any&nbsp;token&nbsp;*/
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(tokList.indexWhich({x:&nbsp;x[1]&nbsp;is&nbsp;in&nbsp;('you',&nbsp;'himself',&nbsp;'herself')}))
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;local&nbsp;lst&nbsp;=&nbsp;[];
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach(local&nbsp;tok&nbsp;in&nbsp;tokList)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(tok[1]&nbsp;==&nbsp;'you')
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tok[1]&nbsp;=&nbsp;'me';
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tok[3]&nbsp;=&nbsp;'me';
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(tok[1]&nbsp;is&nbsp;in&nbsp;('himself',&nbsp;'herself'))
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tok[1]&nbsp;=&nbsp;'yourself';
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tok[3]&nbsp;=&nbsp;'yourself';
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lst&nbsp;+=&nbsp;[tok];&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tokList&nbsp;=&nbsp;lst;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;executeCommand(self,&nbsp;gActor,&nbsp;tokList,&nbsp;true);
<br>
&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;}
<br>
;&nbsp;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
</font></font>

</body></html>
