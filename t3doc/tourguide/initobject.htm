<html><head><meta name="generator" content="Help & Manual 2.7.0"><title>InitObject</title><meta name="keywords" content="InitObject,execBeforeMe,execAfterMe"></meta></head>
<body bgcolor="#FFFFFF">
<table width="100%" border="0" cellspacing="0" cellpadding="3" bgcolor="#C0C0C0"><tr><td align="left">
<font face="Arial" size="3" color="#000000"><b>InitObject: <a href="moduleexecobject.htm">ModuleExecObject</a>
<br>
</b></font>

</td><td align="right"><font face="Arial" size="2"><a href="moduleexecobject.htm">[Previous]</a> <a href="generalintroduction.htm">[Main]</a> <a href="preinitobject.htm">[Next]</a></font></td></tr></table><br>

<font face="Arial" size="2" color="#000000">An InitObject is an object that contains an execute() method that is executed at the start of the game, before the first command prompt occurs. In a particular game much the same effect could be achieved by putting the code in gameMain.showIntro(), but there are occasions when you might prefer to use InitObject for a particular task, for example:
<br>

<br>
<table border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="14"><font face="Arial" size="2" color="#000000"><font face="Symbol" size="2" color="#000000">&#183;</font></font></td><td><font face="Arial" size="2" color="#000000">Starting up a Daemon or Fuse, when the InitObject can conveniently be mixed-in with the Daemon or Fuse to form a single object (as in the <a href="onetimepromptdaemon.htm">OneTimePromptDaemon</a> example above).
&nbsp;<br>
</font></td></tr></table><table border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="14"><font face="Arial" size="2" color="#000000"><font face="Symbol" size="2" color="#000000">&#183;</font></font></td><td><font face="Arial" size="2" color="#000000">Writing code for a library extension, or code that you want to be reusable between games, for which isolating it in a separate object will be far more convenient than placing it in a game-specific gameMain.showIntro() method.
&nbsp;<br>
</font></td></tr></table><table border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td width="14"><font face="Arial" size="2" color="#000000"><font face="Symbol" size="2" color="#000000">&#183;</font></font></td><td><font face="Arial" size="2" color="#000000">Writing code for a custom class or object that you want to have initialize itself at startup.
&nbsp;<br>
</font></td></tr></table><table border="0" cellpadding="0" cellspacing="0"><tr valign="top"><td><font face="Arial" size="2" color="#000000"></font></td><td></td></tr></table><font face="Arial" size="2" color="#000000">
<br>
Some control is possible over the order of execution of InitObjects by stipulating a list of InitObjects that must be executed before the current one in the execBeforeMe property, and a list of InitObjects that must be executed after the current one in the execAfterMe property (this mechanism is common to all ModuleExecObjects).
<br>

<br>
Note that in many cases, however, it may be better to use a <a href="preinitobject.htm">PreinitObject</a> for most of these purposes. One case where you <i>must</i> use an InitObject rather than a PreinitObject is when you want the object to set up a Fuse or Daemon. Your code will probably compile if you do this in a PreinitObject, but you'll find that the Fuse or Daemon is not actually set up when the game runs. Another case where you would need to use an InitObject rather than a PreinitObject is where you want its execute method to randomize something at the beginning of the game, e.g.:
<br>

<br>
</font><font face="Courier New" size="2" color="#000000">InitObject
<br>
&nbsp;&nbsp;execute()
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gameMain.villain&nbsp;=&nbsp;rand(moriarty,&nbsp;darthVader,&nbsp;presidentClark,&nbsp;caligula);
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gameMain.villain.moveIntoForTravel(startRoom);
<br>
&nbsp;&nbsp;}
<br>
;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
Although in this example there'd probably be little reason for not putting such code in gameMain.showIntro(). This might be different if we had a class of objects that we wanted to set themselves up in this sort of manner at the start of the game, e.g.:
<br>

<br>
</font><font face="Courier New" size="2" color="#000000">class&nbsp;PredatoryMale:&nbsp;Person,&nbsp;InitObject
<br>
&nbsp;&nbsp;mainTargetOfDesire&nbsp;=&nbsp;nil
<br>
&nbsp;&nbsp;execute()
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mainTargetOfDesire&nbsp;=&nbsp;rand(jane,&nbsp;jill,&nbsp;sandra,&nbsp;mary,&nbsp;virginia);
<br>
&nbsp;&nbsp;}
<br>
;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
The fact that this might allow several predatory males to share the same main target of desire might not matter in the least in this imaginary game (although in this case we could have overridden initializeActor to achieve the same result).
<br>

<br>

<br>

<br>

<br>

<br>

<br>

<br>
</font></font>

</body></html>
