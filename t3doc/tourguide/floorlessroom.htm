<html><head><meta name="generator" content="Help & Manual 2.7.0"><title>FloorlessRoom</title><meta name="keywords" content="FloorlessRoom,MultiLoc,StairwayUp,StairwayDown,mast,bottomRoom"></meta></head>
<body bgcolor="#FFFFFF">
<table width="100%" border="0" cellspacing="0" cellpadding="3" bgcolor="#C0C0C0"><tr><td align="left">
<font face="Arial" size="3" color="#000000"><b>FloorlessRoom : <a href="floorless.htm">Floorless</a>, <a href="room.htm">Room</a>
<br>
</b></font>

</td><td align="right"><font face="Arial" size="2"><a href="shipboardroom.htm">[Previous]</a> <a href="generalintroduction.htm">[Main]</a> <a href="floorless.htm">[Next]</a></font></td></tr></table><br>

<font face="Arial" size="2" color="#000000">A FloorlessRoom, as its name suggests, is a location that lacks a floor, such as the top of a vertical shaft, or a tree. The top of a mast, which is the sort of thing one would expect to find aboard ship, is another good example. Apart from lacking a floor (something we'll discuss in more detail when we come to talk about roomParts) a FloorlessRoom has the property that something dropped there does not remain there but drops out of sight either into oblivion, or into other specified location (such as the bottom of the vertical shaft, tree or mast).
<br>

<br>
Before we can define the top of the mast we need to define its bottom. We'll assume the mast is located in the centre of main deck, i.e. between portDeck and starboardDeck. It thus exists in both locations, which makes it an ideal example of a <a href="multiloc.htm">MultiLoc</a>:
<br>

<br>
<font face="Courier New" size="2" color="#000000">mast&nbsp;:&nbsp;MultiLoc,&nbsp;StairwayUp&nbsp;'tall&nbsp;thick&nbsp;wooden&nbsp;mast'&nbsp;'tall&nbsp;mast'
<br>
&nbsp;&nbsp;"The&nbsp;thick&nbsp;wooden&nbsp;mast&nbsp;towers&nbsp;up&nbsp;at&nbsp;least&nbsp;a&nbsp;hundred&nbsp;feet.&nbsp;"
<br>
&nbsp;&nbsp;locationList&nbsp;=&nbsp;[portDeck,&nbsp;starboardDeck]
<br>
;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
We also make the mast a <a href="stairwayup.htm">StairwayUp</a>, since although it does not look much like a flight of stairs, it is something we can climb to reach another location, and so it behaves like a StairwayUp. Note that the MultiLoc mix-in class must be specified before the Thing-derived class (in this case StairwayUp) in the list of superclasses, and that its locationList property contains a list of locations where the mast can be found.
<br>

<br>
We can now define the top of the mast as our FloorlessRoom example. The one thing we need to consider is how we want to specify its bottomRoom property (the place where objects dropped here will end up). One would expect something dropped from the top of the mast to fall to the deck below, but should it land in portDeck or starboardDeck? Likewise, where should the PC fetch up when he or she descends the mast? This is precisely the same dilemma we had when deciding how to proceed aft from foreDeck, so we can use precisely the same solution:
<br>

<br>
</font><font face="Courier New" size="2" color="#000000">topOfMast&nbsp;:&nbsp;FloorlessRoom&nbsp;'Top&nbsp;of&nbsp;Mast'&nbsp;'the&nbsp;top&nbsp;of&nbsp;the&nbsp;mast'
<br>
&nbsp;&nbsp;"From&nbsp;the&nbsp;top&nbsp;of&nbsp;the&nbsp;mast&nbsp;you&nbsp;can&nbsp;see&nbsp;miles&nbsp;out&nbsp;across&nbsp;the&nbsp;lake&nbsp;to&nbsp;starboard
<br>
&nbsp;&nbsp;&nbsp;and&nbsp;the&nbsp;shore&nbsp;over&nbsp;to&nbsp;port.&nbsp;The&nbsp;deck&nbsp;below&nbsp;looks&nbsp;a&nbsp;sickeningly&nbsp;long&nbsp;way&nbsp;down.&nbsp;"
<br>
&nbsp;&nbsp;&nbsp;down&nbsp;=&nbsp;mainDeck
<br>
&nbsp;&nbsp;&nbsp;bottomRoom&nbsp;=&nbsp;(mainDeck.destination)
<br>
;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
The result of this is that something dropped from the top of the mast has an equal chance of fetching up in portDeck or starboardDeck (in a simpler situation we could simply have specified a single room as the value of the bottomRoom property). In a moment or two you can test this out by picking up the boulder on the way to the ship and dropping it from the top of the mast. But first we have one more task to complete, and that is to provide a mast object for the PC to climb down from at the top of the mast. This should clearly by a <a href="stairwaydown.htm">StairwayDown</a>, but the problem is that its masterObject will be the MultiLoc mast object, so it won't be able to handle climbing down properly - indeed, unless we do something about it we'll get a runtime error before we even try. The solution is to remap the StairwayDown's TravelVia handling to the mainDeck connector:
<br>

<br>
</font><font face="Courier New" size="2" color="#000000">+&nbsp;StairwayDown&nbsp;-&gt;mast&nbsp;'mast'&nbsp;'mast'
<br>
&nbsp;&nbsp;"Right&nbsp;now&nbsp;you're&nbsp;clinging&nbsp;to&nbsp;it&nbsp;for&nbsp;dear&nbsp;life.&nbsp;"
<br>
&nbsp;&nbsp;dobjFor(TravelVia)&nbsp;remapTo(TravelVia,&nbsp;mainDeck)
<br>
;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
You should now be able to compile and run the game to test that everything is working correctly. When moving about the deck you can abbreviate the PORT, STARBOARD, FORE and AFT commands to P, SB, F and A respectively. Just don't try going down the steps from the quarterdeck yet.
<br>
</font></font>

</body></html>
