<html><head><meta name="generator" content="Help & Manual 2.7.0"><title>Hiding with Words</title></head>
<body bgcolor="#FFFFFF">
<table width="100%" border="0" cellspacing="0" cellpadding="3" bgcolor="#C0C0C0"><tr><td align="left">
<font face="Arial" size="3" color="#000000"><b>Hiding with Words
<br>
</b></font>

</td><td align="right"><font face="Arial" size="2"><a href="hiding+fiding-introduction.htm">[Previous]</a> <a href="generalintroduction.htm">[Main]</a> <a href="findingincode.htm">[Next]</a></font></td></tr></table><br>

<font face="Arial" size="2" color="#000000">Perhaps the most basic way you could go about trying to hide something is by obscuring the way it's described, at least until it comes into the player's possession. We want to make the diamond lying at the end of the path a bit less obvious. To do this we could juggle the various description and name properties of the diamond, giving it a null string initSpecialDesc so it isn't listed anywhere until moved, and employ our custom inRoomDesc method to add a little hint to the room description. As a first (and somewhat over-the-top attempt) we might try something like:
<br>

<br>
<font face="Courier New" size="2" color="#000000">diamond&nbsp;:&nbsp;Thing&nbsp;'sparkle'&nbsp;'sparkle'&nbsp;@pathEnd
<br>
&nbsp;&nbsp;"It&nbsp;looks&nbsp;like&nbsp;a&nbsp;genuine&nbsp;diamond&nbsp;-&nbsp;and&nbsp;a&nbsp;valuable&nbsp;one&nbsp;too,&nbsp;exquisitely&nbsp;cut
<br>
&nbsp;&nbsp;&nbsp;and&nbsp;multifaceted.&nbsp;"
<br>
&nbsp;&nbsp;iobjFor(CutWith)&nbsp;{&nbsp;verify()&nbsp;{&nbsp;}&nbsp;}
<br>
&nbsp;&nbsp;initSpecialDesc&nbsp;=&nbsp;""
<br>
&nbsp;&nbsp;initDesc&nbsp;=&nbsp;"It's&nbsp;hard&nbsp;to&nbsp;make&nbsp;out;&nbsp;maybe&nbsp;there's&nbsp;something&nbsp;there,&nbsp;or
<br>
&nbsp;&nbsp;&nbsp;maybe&nbsp;it's&nbsp;just&nbsp;a&nbsp;trick&nbsp;of&nbsp;the&nbsp;light.&nbsp;"
<br>
&nbsp;&nbsp;inRoomDesc()
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;if(!moved)&nbsp;"Something&nbsp;seems&nbsp;to&nbsp;sparkle&nbsp;among&nbsp;the&nbsp;rocks.&nbsp;";
<br>
&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;moveInto(newDest)
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;if(!moved)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initializeVocabWith('sparkling&nbsp;diamond');&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;=&nbsp;'diamond';
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Take&nbsp;a&nbsp;sparkle?&nbsp;You'll&nbsp;be&nbsp;wanting&nbsp;to&nbsp;drink&nbsp;a&nbsp;rainbow&nbsp;next!\b
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Oh&nbsp;well,&nbsp;if&nbsp;you&nbsp;insist.&nbsp;So,&nbsp;you&nbsp;scrabble&nbsp;among&nbsp;the&nbsp;rocks&nbsp;with&nbsp;your
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clumsy&nbsp;little&nbsp;fingers&nbsp;and&nbsp;-&nbsp;my&nbsp;goodness!&nbsp;They&nbsp;close&nbsp;upon&nbsp;the&nbsp;sparkle,&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;as&nbsp;you&nbsp;pick&nbsp;it&nbsp;up&nbsp;it&nbsp;turns&nbsp;out&nbsp;to&nbsp;be&nbsp;something&nbsp;very&nbsp;solid&nbsp;and
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hard&nbsp;after&nbsp;all&nbsp;-&nbsp;a&nbsp;diamond&nbsp;no&nbsp;less!&nbsp;";
<br>
&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;inherited(newDest);
<br>
&nbsp;&nbsp;}
<br>
;
<br>

<br>
Decoration&nbsp;'rocks'&nbsp;'rocks'&nbsp;@pathEnd
<br>
&nbsp;&nbsp;desc&nbsp;=&nbsp;"&lt;&lt;diamond.moved&nbsp;?&nbsp;'They\'re&nbsp;just&nbsp;rocks.&nbsp;'&nbsp;:&nbsp;diamond.inRoomDesc&gt;&gt;"
<br>
&nbsp;&nbsp;isPlural&nbsp;=&nbsp;true
<br>
;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
This is really pretty horrendous, quite apart from the sarcasm of the message displayed when the player first takes the diamond, he or she is meant to guess that the correct action here is TAKE SPARKLE. This makes it little better than a "read the author's mind" puzzle. It can be improved, however, by adding handling for searching the rocks (which is something the player is more likely to think of):
<br>

<br>
</font><font face="Courier New" size="2" color="#000000">diamond&nbsp;:&nbsp;Thing&nbsp;'sparkle'&nbsp;'sparkle'&nbsp;@pathEnd
<br>
&nbsp;&nbsp;"It&nbsp;looks&nbsp;like&nbsp;a&nbsp;genuine&nbsp;diamond&nbsp;-&nbsp;and&nbsp;a&nbsp;valuable&nbsp;one&nbsp;too,&nbsp;exquisitely&nbsp;cut
<br>
&nbsp;&nbsp;&nbsp;and&nbsp;multifaceted.&nbsp;"
<br>
&nbsp;&nbsp;iobjFor(CutWith)&nbsp;{&nbsp;verify()&nbsp;{&nbsp;}&nbsp;}
<br>
&nbsp;&nbsp;initSpecialDesc&nbsp;=&nbsp;""
<br>
&nbsp;&nbsp;initDesc&nbsp;=&nbsp;"It's&nbsp;hard&nbsp;to&nbsp;make&nbsp;out;&nbsp;maybe&nbsp;there's&nbsp;something&nbsp;there,&nbsp;or
<br>
&nbsp;&nbsp;&nbsp;maybe&nbsp;it's&nbsp;just&nbsp;a&nbsp;trick&nbsp;of&nbsp;the&nbsp;light.&nbsp;"
<br>
&nbsp;&nbsp;inRoomDesc()
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;if(!moved)&nbsp;"Something&nbsp;seems&nbsp;to&nbsp;sparkle&nbsp;among&nbsp;the&nbsp;rocks.&nbsp;";
<br>
&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;moveInto(newDest)
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<b>if(!renamed)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"When&nbsp;you&nbsp;pick&nbsp;it&nbsp;up&nbsp;it&nbsp;turns&nbsp;out&nbsp;to&nbsp;be&nbsp;a&nbsp;gem&nbsp;-&nbsp;a&nbsp;diamond&nbsp;no&nbsp;less!&nbsp;";
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rename();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;}</b>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;inherited(newDest);
<br>
&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;<b>rename()
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initializeVocabWith('sparkling&nbsp;diamond');&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;=&nbsp;'diamond';
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;renamed&nbsp;=&nbsp;true;
<br>
&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;renamed&nbsp;=&nbsp;nil
<br>
</b>;
<br>

<br>
Fixture&nbsp;'rocks'&nbsp;'rocks'&nbsp;@pathEnd
<br>
&nbsp;&nbsp;desc&nbsp;=&nbsp;=&nbsp;"&lt;&lt;diamond.moved&nbsp;?&nbsp;'They\'re&nbsp;just&nbsp;rocks.&nbsp;'&nbsp;:&nbsp;diamond.inRoomDesc&gt;&gt;"
<br>
&nbsp;&nbsp;isPlural&nbsp;=&nbsp;true
<br>
&nbsp;&nbsp;dobjFor(LookIn)
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;action()
<br>
&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(diamond.moved)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"There's&nbsp;not&nbsp;much&nbsp;here.&nbsp;";
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if(diamond.renamed)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"A&nbsp;diamond&nbsp;nestles&nbsp;among&nbsp;the&nbsp;rocks.&nbsp;";
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;diamond.rename();
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Hunting&nbsp;diligently&nbsp;among&nbsp;the&nbsp;rocks&nbsp;you&nbsp;come&nbsp;across&nbsp;the&nbsp;source&nbsp;of&nbsp;the
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sparkle&nbsp;-&nbsp;something&nbsp;tangible&nbsp;and&nbsp;hard&nbsp;-&nbsp;a&nbsp;diamond!&nbsp;";
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;}
<br>
;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>
This may be acceptable, but it's quite a lot of code for finding a diamond, and unless this is exactly what you want, there are probably better ways of doing it, as we shall see.
<br>
</font></font>

</body></html>
