<html><head><meta name="generator" content="Help & Manual 2.7.0"><title>CyclicEventList</title><meta name="keywords" content="CyclicEventList,throwTargetCatch"></meta></head>
<body bgcolor="#FFFFFF">
<table width="100%" border="0" cellspacing="0" cellpadding="3" bgcolor="#C0C0C0"><tr><td align="left">
<font face="Arial" size="3" color="#000000"><b>CyclicEventList : <a href="eventlist.htm">EventList</a>
<br>
</b></font>

</td><td align="right"><font face="Arial" size="2"><a href="stopeventlist.htm">[Previous]</a> <a href="generalintroduction.htm">[Main]</a> <a href="randomeventlist.htm">[Next]</a></font></td></tr></table><br>

<font face="Arial" size="2" color="#000000">A CyclicEventList is just like an EventList, except that it keeps looping round the list; once it reaches the last item in the list it goes back to the first, and carries on round indefinitely.
<br>

<br>
Although one would normally want to randomize the events that occur (or strings that are displayed), there may be occasions when you want more control over the sequence of events. For example, when our intrepid adventurer finally reaches the side of the volcano, he'll have to wait a couple of turns until the volcano happens to set fire to a nearby bush before the bush can be pulled up revealing a small hole into the side of the volcano. We could control this by means of a CyclicEventList linked to a StopEventList that sets fire to the bush first time round and merely displays some text thereafter. The following code shows how we might go about this, at the same time providing several other examples of EventLists, an example of a <a href="sensedaemon.htm">SenseDaemon</a>, and a means of disposing of the pesky Golden Banana of Discord:
<br>

<br>

<br>
<font face="Courier New" size="2" color="#000000">sideOfVolcano&nbsp;:&nbsp;OutdoorRoom&nbsp;'Side&nbsp;of&nbsp;Volcano'&nbsp;'the&nbsp;side&nbsp;of&nbsp;the&nbsp;volcano'
<br>
&nbsp;&nbsp;&nbsp;"Halfway&nbsp;up&nbsp;the&nbsp;side&nbsp;of&nbsp;the&nbsp;volcano&nbsp;the&nbsp;path&nbsp;up&nbsp;from&nbsp;the&nbsp;basalt&nbsp;plain
<br>
&nbsp;&nbsp;&nbsp;&nbsp;peters&nbsp;out.&nbsp;There's&nbsp;no&nbsp;obvious&nbsp;way&nbsp;to&nbsp;climb&nbsp;any&nbsp;further&nbsp;up&nbsp;from&nbsp;here,
<br>
&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;the&nbsp;fact&nbsp;that&nbsp;the&nbsp;volcano&nbsp;is&nbsp;continuously&nbsp;belching&nbsp;fire,&nbsp;smoke,
<br>
&nbsp;&nbsp;&nbsp;&nbsp;ash,&nbsp;and&nbsp;the&nbsp;occasional&nbsp;rock&nbsp;and&nbsp;dollop&nbsp;of&nbsp;lava&nbsp;probably&nbsp;would&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;probably&nbsp;make&nbsp;any&nbsp;further&nbsp;progress&nbsp;up&nbsp;its&nbsp;side&nbsp;more&nbsp;than&nbsp;a&nbsp;little&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;perilous.&nbsp;"
<br>
&nbsp;&nbsp;&nbsp;down&nbsp;=&nbsp;volcanoPathDown
<br>
&nbsp;&nbsp;&nbsp;in&nbsp;=&nbsp;bushHole
<br>
&nbsp;&nbsp;&nbsp;atmosphereList&nbsp;:&nbsp;CyclicEventList&nbsp;
<br>
&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;[
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'A&nbsp;loud&nbsp;rumbling&nbsp;comes&nbsp;from&nbsp;deep&nbsp;inside&nbsp;the&nbsp;mountain.&nbsp;',
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lexicalParent.rockFallList,
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nil
<br>
&nbsp;&nbsp;&nbsp;&nbsp;]
<br>
&nbsp;&nbsp;&nbsp;}
<br>

<br>
&nbsp;&nbsp;&nbsp;rockFallList&nbsp;:&nbsp;StopEventList
<br>
&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;[
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'High&nbsp;above&nbsp;your&nbsp;head&nbsp;a&nbsp;shower&nbsp;of&nbsp;flame&nbsp;and&nbsp;sparks&nbsp;issues&nbsp;from&nbsp;the
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;top&nbsp;of&nbsp;the&nbsp;volcano,&nbsp;sending&nbsp;blazing&nbsp;rocks&nbsp;tumbling&nbsp;down&nbsp;the
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hillside.&nbsp;',
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;function&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"A&nbsp;blazing&nbsp;rock&nbsp;comes&nbsp;hurtling&nbsp;down&nbsp;the&nbsp;hillside,&nbsp;narrowly
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;missing&nbsp;you&nbsp;but&nbsp;setting&nbsp;the&nbsp;bush&nbsp;ablaze.&nbsp;";
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bush.daemonID&nbsp;=&nbsp;new&nbsp;SenseDaemon(bush,&nbsp;&amp;burnDaemon,&nbsp;1,&nbsp;bush,&nbsp;sight);
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'A&nbsp;shower&nbsp;of&nbsp;sparks&nbsp;and&nbsp;rocks&nbsp;spews&nbsp;from&nbsp;the&nbsp;volcano&nbsp;above&nbsp;your&nbsp;head.&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;]
<br>
&nbsp;&nbsp;&nbsp;}
<br>
;
<br>

<br>
+&nbsp;bush:&nbsp;CustomImmovable&nbsp;'desiccated&nbsp;burning&nbsp;bush'&nbsp;'desiccated&nbsp;bush'
<br>
&nbsp;&nbsp;"The&nbsp;bush&nbsp;is&nbsp;&lt;&lt;daemonID&nbsp;==&nbsp;nil&nbsp;?&nbsp;'little&nbsp;more&nbsp;than&nbsp;a&nbsp;collections&nbsp;of
<br>
&nbsp;&nbsp;&nbsp;dried&nbsp;sticks,&nbsp;with&nbsp;only&nbsp;the&nbsp;occasional&nbsp;apology&nbsp;for&nbsp;a&nbsp;leaf&nbsp;doing&nbsp;duty
<br>
&nbsp;&nbsp;&nbsp;for&nbsp;foliage'&nbsp;:&nbsp;'ablaze'&gt;&gt;.&nbsp;"&nbsp;
<br>
&nbsp;&nbsp;inRoomDesc&nbsp;=&nbsp;"The&nbsp;only&nbsp;sign&nbsp;of&nbsp;life&nbsp;on&nbsp;this&nbsp;barren&nbsp;hillside
<br>
&nbsp;&nbsp;&nbsp;&nbsp;is&nbsp;a&nbsp;desiccated&nbsp;bush.&nbsp;"
<br>
&nbsp;&nbsp;burnDaemon&nbsp;{&nbsp;eventList.doScript;&nbsp;}
<br>
&nbsp;&nbsp;daemonID&nbsp;=&nbsp;nil&nbsp;&nbsp;
<br>
&nbsp;&nbsp;eventList&nbsp;:&nbsp;EventList
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;[
<br>
&nbsp;&nbsp;&nbsp;&nbsp;'The&nbsp;bush&nbsp;is&nbsp;alight.&nbsp;',
<br>
&nbsp;&nbsp;&nbsp;&nbsp;'The&nbsp;bush&nbsp;is&nbsp;burning&nbsp;furiously.&nbsp;',
<br>
&nbsp;&nbsp;&nbsp;&nbsp;'The&nbsp;bush&nbsp;is&nbsp;starting&nbsp;to&nbsp;burn&nbsp;out.&nbsp;',
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&amp;swap
<br>
&nbsp;&nbsp;]&nbsp;&nbsp;
<br>
&nbsp;&nbsp;swap()
<br>
&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;"The&nbsp;flames&nbsp;on&nbsp;the&nbsp;bush&nbsp;die&nbsp;out,&nbsp;leaving&nbsp;only&nbsp;charred&nbsp;remains.&nbsp;";
<br>
&nbsp;&nbsp;&nbsp;&nbsp;lexicalParent.daemonID.removeEvent();
<br>
&nbsp;&nbsp;&nbsp;&nbsp;lexicalParent.daemonID&nbsp;=&nbsp;nil;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;burnedBush.moveInto(lexicalParent.location);
<br>
&nbsp;&nbsp;&nbsp;&nbsp;lexicalParent.moveInto(nil);
<br>
&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;cannotTakeMsg&nbsp;=&nbsp;'Tug&nbsp;as&nbsp;{you/he}&nbsp;will,&nbsp;the&nbsp;bush&nbsp;will&nbsp;not&nbsp;quite&nbsp;come
<br>
&nbsp;&nbsp;&nbsp;&nbsp;free&nbsp;of&nbsp;the&nbsp;ground.&nbsp;'
<br>
;
<br>

<br>

<br>
+&nbsp;volcanoPathDown&nbsp;:&nbsp;StairwayDown&nbsp;'narrow&nbsp;down&nbsp;path'&nbsp;'narrow&nbsp;down&nbsp;path'
<br>
;
<br>
&nbsp;
<br>
+&nbsp;bushHole&nbsp;:&nbsp;HiddenDoor&nbsp;'small&nbsp;hole'&nbsp;'small&nbsp;hole'
<br>
&nbsp;&nbsp;"The&nbsp;small&nbsp;hole&nbsp;exposed&nbsp;by&nbsp;pulling&nbsp;up&nbsp;the&nbsp;burned-out&nbsp;bush&nbsp;looks
<br>
&nbsp;&nbsp;&nbsp;just&nbsp;large&nbsp;enough&nbsp;to&nbsp;crawl&nbsp;through.&nbsp;"
<br>
&nbsp;&nbsp;destination&nbsp;=&nbsp;volcanoTunnel&nbsp;
<br>
&nbsp;&nbsp;isOpen&nbsp;=&nbsp;(burnedBush.isPulled)
<br>
;&nbsp;
<br>
&nbsp;
<br>
burnedBush&nbsp;:&nbsp;Lever,&nbsp;Fixture&nbsp;'burned&nbsp;bush'&nbsp;'burned&nbsp;bush'&nbsp;
<br>
&nbsp;&nbsp;"All&nbsp;that&nbsp;remains&nbsp;are&nbsp;the&nbsp;charred&nbsp;remains&nbsp;of&nbsp;the&nbsp;bush.&nbsp;"
<br>
&nbsp;&nbsp;makePulled(stat)
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;if(stat)
<br>
&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"When&nbsp;{you/he}&nbsp;pull{s}&nbsp;at&nbsp;the&nbsp;burned-out&nbsp;bush,&nbsp;it&nbsp;comes&nbsp;clear&nbsp;of&nbsp;the
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ground,&nbsp;sending&nbsp;a&nbsp;shower&nbsp;of&nbsp;dried&nbsp;earth&nbsp;tumbling&nbsp;down&nbsp;the&nbsp;hillside
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and&nbsp;revealing&nbsp;a&nbsp;small&nbsp;hole&nbsp;in&nbsp;the&nbsp;hillside.&nbsp;";&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;else
<br>
&nbsp;&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"You&nbsp;push&nbsp;the&nbsp;remains&nbsp;of&nbsp;the&nbsp;bush&nbsp;back&nbsp;into&nbsp;the&nbsp;hole.&nbsp;";
<br>
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;inherited(stat);&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;}
<br>
;&nbsp;
<br>

<br>
volcanoTunnel&nbsp;:&nbsp;DarkRoom&nbsp;'Narrow&nbsp;Tunnel'&nbsp;'the&nbsp;narrow&nbsp;tunnel'
<br>
&nbsp;&nbsp;"This&nbsp;narrow&nbsp;tunnel&nbsp;is&nbsp;only&nbsp;just&nbsp;about&nbsp;large&nbsp;enough&nbsp;to&nbsp;crawl
<br>
&nbsp;&nbsp;&nbsp;through.&nbsp;One&nbsp;way&nbsp;it&nbsp;carries&nbsp;on&nbsp;north&nbsp;deep&nbsp;into&nbsp;the&nbsp;volcano,&nbsp;while
<br>
&nbsp;&nbsp;&nbsp;the&nbsp;other&nbsp;way&nbsp;(south)&nbsp;leads&nbsp;back&nbsp;out.&nbsp;"
<br>
&nbsp;&nbsp;out&nbsp;asExit(south)
<br>
&nbsp;&nbsp;in&nbsp;asExit(north)
<br>
&nbsp;&nbsp;north&nbsp;=&nbsp;volcanoLedge
<br>
&nbsp;&nbsp;south&nbsp;=&nbsp;sideOfVolcano
<br>
;
<br>

<br>
volcanoLedge&nbsp;:&nbsp;Room&nbsp;'Ledge&nbsp;inside&nbsp;Volcano'&nbsp;'the&nbsp;ledge&nbsp;inside&nbsp;the&nbsp;Volcano'
<br>
&nbsp;&nbsp;"This&nbsp;narrow&nbsp;ledge,&nbsp;on&nbsp;the&nbsp;inside&nbsp;of&nbsp;the&nbsp;volcanic&nbsp;crater,&nbsp;overlooks&nbsp;a
<br>
&nbsp;&nbsp;&nbsp;heaving&nbsp;pool&nbsp;of&nbsp;lava&nbsp;below.&nbsp;It's&nbsp;very&nbsp;hot&nbsp;here&nbsp;and&nbsp;probably&nbsp;not&nbsp;a
<br>
&nbsp;&nbsp;&nbsp;healthy&nbsp;place&nbsp;to&nbsp;be,&nbsp;but&nbsp;the&nbsp;only&nbsp;way&nbsp;out&nbsp;is&nbsp;through&nbsp;a&nbsp;small&nbsp;hole
<br>
&nbsp;&nbsp;&nbsp;in&nbsp;the&nbsp;side&nbsp;of&nbsp;the&nbsp;crater.&nbsp;"
<br>
&nbsp;&nbsp;&nbsp;in&nbsp;=&nbsp;volcanoTunnel
<br>
&nbsp;&nbsp;&nbsp;south&nbsp;asExit(in)
<br>
&nbsp;&nbsp;&nbsp;atmosphereList&nbsp;:&nbsp;EventList
<br>
&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[&nbsp;nil,&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'A&nbsp;plume&nbsp;of&nbsp;lava&nbsp;shoots&nbsp;up&nbsp;from&nbsp;the&nbsp;pool,&nbsp;throwing&nbsp;rocks&nbsp;out
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of&nbsp;the&nbsp;crater&nbsp;mouth&nbsp;above.&nbsp;',
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nil,
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'A&nbsp;second&nbsp;plume&nbsp;of&nbsp;lava&nbsp;bubbles&nbsp;up&nbsp;from&nbsp;the&nbsp;pool,&nbsp;narrowly
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;missing&nbsp;the&nbsp;ledge.&nbsp;',
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'Yet&nbsp;another&nbsp;jet&nbsp;of&nbsp;steam,&nbsp;lava,&nbsp;rocks&nbsp;and&nbsp;ashes&nbsp;shoots&nbsp;up
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;the&nbsp;pool,&nbsp;uncomfortably&nbsp;close.&nbsp;',
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{:&nbsp;"This&nbsp;time,&nbsp;the&nbsp;hissing&nbsp;lava&nbsp;bubbling&nbsp;up&nbsp;from&nbsp;the&nbsp;lake
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strikes&nbsp;the&nbsp;ledge,&nbsp;scalding&nbsp;you&nbsp;to&nbsp;death.\b&lt;&lt;endGame(ftDeath)&gt;&gt;"&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;&nbsp;}
<br>
&nbsp;&nbsp;&nbsp;enteringRoom(traveler)
<br>
&nbsp;&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;atmosphereList.curScriptState&nbsp;=&nbsp;1;
<br>
&nbsp;&nbsp;&nbsp;}
<br>
;
<br>

<br>
+&nbsp;Enterable&nbsp;-&gt;volcanoTunnel&nbsp;'small&nbsp;hole'&nbsp;'small&nbsp;hole'
<br>
&nbsp;&nbsp;"The&nbsp;small&nbsp;hole&nbsp;in&nbsp;the&nbsp;crater&nbsp;wall&nbsp;is&nbsp;just&nbsp;about&nbsp;large&nbsp;enough&nbsp;to
<br>
&nbsp;&nbsp;&nbsp;crawl&nbsp;through&nbsp;and&nbsp;looks&nbsp;like&nbsp;the&nbsp;only&nbsp;way&nbsp;to&nbsp;leave&nbsp;the&nbsp;ledge.&nbsp;"
<br>
;
<br>

<br>
+&nbsp;Distant&nbsp;'lava&nbsp;pool'&nbsp;'lava&nbsp;pool'
<br>
&nbsp;&nbsp;"The&nbsp;pool&nbsp;of&nbsp;seething&nbsp;red&nbsp;lava&nbsp;is&nbsp;bubbling&nbsp;away&nbsp;about&nbsp;two&nbsp;hundred&nbsp;yards
<br>
&nbsp;&nbsp;&nbsp;beneath&nbsp;the&nbsp;ledge,&nbsp;accordingly&nbsp;throwing&nbsp;up&nbsp;flaming&nbsp;rocks&nbsp;and&nbsp;spurts
<br>
&nbsp;&nbsp;&nbsp;of&nbsp;lava.&nbsp;"
<br>
&nbsp;&nbsp;iobjFor(ThrowAt)&nbsp;asIobjFor(ThrowTo)
<br>
&nbsp;&nbsp;iobjFor(ThrowTo)
<br>
&nbsp;&nbsp;{
<br>
&nbsp;&nbsp;&nbsp;&nbsp;verify()&nbsp;{}&nbsp;&nbsp;&nbsp;&nbsp;
<br>
&nbsp;&nbsp;}&nbsp;
<br>
&nbsp;&nbsp;throwTargetCatch(obj,&nbsp;path)&nbsp;
<br>
&nbsp;&nbsp;{&nbsp;
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"\^&lt;&lt;obj.theName&gt;&gt;&nbsp;drops&nbsp;into&nbsp;the&nbsp;bubbling&nbsp;pool&nbsp;of&nbsp;lava&nbsp;and&nbsp;disappears
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;out&nbsp;of&nbsp;sight,&nbsp;lost&nbsp;forever.&nbsp;";
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;obj.moveInto(nil);
<br>
&nbsp;&nbsp;}
<br>
;
<br>
</font><font face="Arial" size="2" color="#000000">
<br>

<br>
Note, that at the moment, there's no way to reach the sideOfVolcano room to try all this out other than using POW DESICCATED BUSH if you've included ncDebugActions with your code.
<br>
</font></font>

</body></html>
